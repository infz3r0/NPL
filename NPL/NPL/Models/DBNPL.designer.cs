#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NPL.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NPL")]
	public partial class DBNPLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertThucDon(ThucDon instance);
    partial void UpdateThucDon(ThucDon instance);
    partial void DeleteThucDon(ThucDon instance);
    partial void InsertChiTietDatHang(ChiTietDatHang instance);
    partial void UpdateChiTietDatHang(ChiTietDatHang instance);
    partial void DeleteChiTietDatHang(ChiTietDatHang instance);
    partial void InsertDatHang(DatHang instance);
    partial void UpdateDatHang(DatHang instance);
    partial void DeleteDatHang(DatHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertMonAn(MonAn instance);
    partial void UpdateMonAn(MonAn instance);
    partial void DeleteMonAn(MonAn instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertLoai(Loai instance);
    partial void UpdateLoai(Loai instance);
    partial void DeleteLoai(Loai instance);
    partial void InsertNhom(Nhom instance);
    partial void UpdateNhom(Nhom instance);
    partial void DeleteNhom(Nhom instance);
    #endregion
		
		public DBNPLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NPLConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBNPLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBNPLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBNPLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBNPLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<ThucDon> ThucDons
		{
			get
			{
				return this.GetTable<ThucDon>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this.GetTable<ChiTietDatHang>();
			}
		}
		
		public System.Data.Linq.Table<DatHang> DatHangs
		{
			get
			{
				return this.GetTable<DatHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<MonAn> MonAns
		{
			get
			{
				return this.GetTable<MonAn>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<Loai> Loais
		{
			get
			{
				return this.GetTable<Loai>();
			}
		}
		
		public System.Data.Linq.Table<Nhom> Nhoms
		{
			get
			{
				return this.GetTable<Nhom>();
			}
		}
		
		public System.Data.Linq.Table<V_ThongKeThucDon> V_ThongKeThucDons
		{
			get
			{
				return this.GetTable<V_ThongKeThucDon>();
			}
		}
		
		public System.Data.Linq.Table<V_ThongKeUser> V_ThongKeUsers
		{
			get
			{
				return this.GetTable<V_ThongKeUser>();
			}
		}
		
		public System.Data.Linq.Table<V_ThongKeDoanhThu> V_ThongKeDoanhThus
		{
			get
			{
				return this.GetTable<V_ThongKeDoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<CaiDat> CaiDats
		{
			get
			{
				return this.GetTable<CaiDat>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_UpdateCaiDat")]
		public int p_UpdateCaiDat([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TenThamSo", DbType="VarChar(50)")] string tenThamSo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GiaTri", DbType="NVarChar(100)")] string giaTri)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenThamSo, giaTri);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThucDon")]
	public partial class ThucDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThucDon;
		
		private string _TenThucDon;
		
		private string _HinhAnh;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<int> _SoLuongDaDat;
		
		private System.Nullable<int> _IDMonAn;
		
		private EntitySet<ChiTietDatHang> _ChiTietDatHangs;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<MonAn> _MonAn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThucDonChanging(int value);
    partial void OnIDThucDonChanged();
    partial void OnTenThucDonChanging(string value);
    partial void OnTenThucDonChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnSoLuongDaDatChanging(System.Nullable<int> value);
    partial void OnSoLuongDaDatChanged();
    partial void OnIDMonAnChanging(System.Nullable<int> value);
    partial void OnIDMonAnChanged();
    #endregion
		
		public ThucDon()
		{
			this._ChiTietDatHangs = new EntitySet<ChiTietDatHang>(new Action<ChiTietDatHang>(this.attach_ChiTietDatHangs), new Action<ChiTietDatHang>(this.detach_ChiTietDatHangs));
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._MonAn = default(EntityRef<MonAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThucDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDThucDon
		{
			get
			{
				return this._IDThucDon;
			}
			set
			{
				if ((this._IDThucDon != value))
				{
					this.OnIDThucDonChanging(value);
					this.SendPropertyChanging();
					this._IDThucDon = value;
					this.SendPropertyChanged("IDThucDon");
					this.OnIDThucDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThucDon", DbType="NVarChar(100)")]
		public string TenThucDon
		{
			get
			{
				return this._TenThucDon;
			}
			set
			{
				if ((this._TenThucDon != value))
				{
					this.OnTenThucDonChanging(value);
					this.SendPropertyChanging();
					this._TenThucDon = value;
					this.SendPropertyChanged("TenThucDon");
					this.OnTenThucDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDaDat", DbType="Int")]
		public System.Nullable<int> SoLuongDaDat
		{
			get
			{
				return this._SoLuongDaDat;
			}
			set
			{
				if ((this._SoLuongDaDat != value))
				{
					this.OnSoLuongDaDatChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDaDat = value;
					this.SendPropertyChanged("SoLuongDaDat");
					this.OnSoLuongDaDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMonAn", DbType="Int")]
		public System.Nullable<int> IDMonAn
		{
			get
			{
				return this._IDMonAn;
			}
			set
			{
				if ((this._IDMonAn != value))
				{
					if (this._MonAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMonAnChanging(value);
					this.SendPropertyChanging();
					this._IDMonAn = value;
					this.SendPropertyChanged("IDMonAn");
					this.OnIDMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_ChiTietDatHang", Storage="_ChiTietDatHangs", ThisKey="IDThucDon", OtherKey="IDThucDon")]
		public EntitySet<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this._ChiTietDatHangs;
			}
			set
			{
				this._ChiTietDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_KhuyenMai", Storage="_KhuyenMai", ThisKey="IDThucDon", OtherKey="IDThucDon", IsUnique=true, IsForeignKey=false)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.ThucDon = null;
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.ThucDon = this;
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonAn_ThucDon", Storage="_MonAn", ThisKey="IDMonAn", OtherKey="IDMonAn", IsForeignKey=true)]
		public MonAn MonAn
		{
			get
			{
				return this._MonAn.Entity;
			}
			set
			{
				MonAn previousValue = this._MonAn.Entity;
				if (((previousValue != value) 
							|| (this._MonAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonAn.Entity = null;
						previousValue.ThucDons.Remove(this);
					}
					this._MonAn.Entity = value;
					if ((value != null))
					{
						value.ThucDons.Add(this);
						this._IDMonAn = value.IDMonAn;
					}
					else
					{
						this._IDMonAn = default(Nullable<int>);
					}
					this.SendPropertyChanged("MonAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = this;
		}
		
		private void detach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDatHang")]
	public partial class ChiTietDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDThucDon;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<ThucDon> _ThucDon;
		
		private EntityRef<DatHang> _DatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDThucDonChanging(int value);
    partial void OnIDThucDonChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietDatHang()
		{
			this._ThucDon = default(EntityRef<ThucDon>);
			this._DatHang = default(EntityRef<DatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._DatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThucDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDThucDon
		{
			get
			{
				return this._IDThucDon;
			}
			set
			{
				if ((this._IDThucDon != value))
				{
					if (this._ThucDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDThucDonChanging(value);
					this.SendPropertyChanging();
					this._IDThucDon = value;
					this.SendPropertyChanged("IDThucDon");
					this.OnIDThucDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_ChiTietDatHang", Storage="_ThucDon", ThisKey="IDThucDon", OtherKey="IDThucDon", IsForeignKey=true)]
		public ThucDon ThucDon
		{
			get
			{
				return this._ThucDon.Entity;
			}
			set
			{
				ThucDon previousValue = this._ThucDon.Entity;
				if (((previousValue != value) 
							|| (this._ThucDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucDon.Entity = null;
						previousValue.ChiTietDatHangs.Remove(this);
					}
					this._ThucDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatHangs.Add(this);
						this._IDThucDon = value.IDThucDon;
					}
					else
					{
						this._IDThucDon = default(int);
					}
					this.SendPropertyChanged("ThucDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatHang_ChiTietDatHang", Storage="_DatHang", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public DatHang DatHang
		{
			get
			{
				return this._DatHang.Entity;
			}
			set
			{
				DatHang previousValue = this._DatHang.Entity;
				if (((previousValue != value) 
							|| (this._DatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatHang.Entity = null;
						previousValue.ChiTietDatHangs.Remove(this);
					}
					this._DatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatHangs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("DatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatHang")]
	public partial class DatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDUser;
		
		private System.Nullable<System.DateTime> _ThoiGianDatHang;
		
		private string _DiaChiGiaoHang;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private System.Nullable<bool> _DaGiaoHang;
		
		private EntitySet<ChiTietDatHang> _ChiTietDatHangs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDUserChanging(System.Nullable<int> value);
    partial void OnIDUserChanged();
    partial void OnThoiGianDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDatHangChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    partial void OnDaGiaoHangChanging(System.Nullable<bool> value);
    partial void OnDaGiaoHangChanged();
    #endregion
		
		public DatHang()
		{
			this._ChiTietDatHangs = new EntitySet<ChiTietDatHang>(new Action<ChiTietDatHang>(this.attach_ChiTietDatHangs), new Action<ChiTietDatHang>(this.detach_ChiTietDatHangs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int")]
		public System.Nullable<int> IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDatHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDatHang
		{
			get
			{
				return this._ThoiGianDatHang;
			}
			set
			{
				if ((this._ThoiGianDatHang != value))
				{
					this.OnThoiGianDatHangChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDatHang = value;
					this.SendPropertyChanged("ThoiGianDatHang");
					this.OnThoiGianDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(200)")]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaGiaoHang", DbType="Bit")]
		public System.Nullable<bool> DaGiaoHang
		{
			get
			{
				return this._DaGiaoHang;
			}
			set
			{
				if ((this._DaGiaoHang != value))
				{
					this.OnDaGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DaGiaoHang = value;
					this.SendPropertyChanged("DaGiaoHang");
					this.OnDaGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatHang_ChiTietDatHang", Storage="_ChiTietDatHangs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this._ChiTietDatHangs;
			}
			set
			{
				this._ChiTietDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DatHang", Storage="_TaiKhoan", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DatHangs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DatHangs.Add(this);
						this._IDUser = value.IDUser;
					}
					else
					{
						this._IDUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DatHang = this;
		}
		
		private void detach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThucDon;
		
		private System.Nullable<double> _GiamGia;
		
		private EntityRef<ThucDon> _ThucDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThucDonChanging(int value);
    partial void OnIDThucDonChanged();
    partial void OnGiamGiaChanging(System.Nullable<double> value);
    partial void OnGiamGiaChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._ThucDon = default(EntityRef<ThucDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThucDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDThucDon
		{
			get
			{
				return this._IDThucDon;
			}
			set
			{
				if ((this._IDThucDon != value))
				{
					if (this._ThucDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDThucDonChanging(value);
					this.SendPropertyChanging();
					this._IDThucDon = value;
					this.SendPropertyChanged("IDThucDon");
					this.OnIDThucDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamGia", DbType="Float")]
		public System.Nullable<double> GiamGia
		{
			get
			{
				return this._GiamGia;
			}
			set
			{
				if ((this._GiamGia != value))
				{
					this.OnGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._GiamGia = value;
					this.SendPropertyChanged("GiamGia");
					this.OnGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_KhuyenMai", Storage="_ThucDon", ThisKey="IDThucDon", OtherKey="IDThucDon", IsForeignKey=true)]
		public ThucDon ThucDon
		{
			get
			{
				return this._ThucDon.Entity;
			}
			set
			{
				ThucDon previousValue = this._ThucDon.Entity;
				if (((previousValue != value) 
							|| (this._ThucDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucDon.Entity = null;
						previousValue.KhuyenMai = null;
					}
					this._ThucDon.Entity = value;
					if ((value != null))
					{
						value.KhuyenMai = this;
						this._IDThucDon = value.IDThucDon;
					}
					else
					{
						this._IDThucDon = default(int);
					}
					this.SendPropertyChanged("ThucDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonAn")]
	public partial class MonAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMonAn;
		
		private string _TenMonAn;
		
		private string _GioiThieu;
		
		private string _HinhAnh;
		
		private System.Nullable<decimal> _PhiVanChuyen;
		
		private System.Nullable<int> _IDLoai;
		
		private EntitySet<ThucDon> _ThucDons;
		
		private EntityRef<Loai> _Loai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMonAnChanging(int value);
    partial void OnIDMonAnChanged();
    partial void OnTenMonAnChanging(string value);
    partial void OnTenMonAnChanged();
    partial void OnGioiThieuChanging(string value);
    partial void OnGioiThieuChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnPhiVanChuyenChanging(System.Nullable<decimal> value);
    partial void OnPhiVanChuyenChanged();
    partial void OnIDLoaiChanging(System.Nullable<int> value);
    partial void OnIDLoaiChanged();
    #endregion
		
		public MonAn()
		{
			this._ThucDons = new EntitySet<ThucDon>(new Action<ThucDon>(this.attach_ThucDons), new Action<ThucDon>(this.detach_ThucDons));
			this._Loai = default(EntityRef<Loai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMonAn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMonAn
		{
			get
			{
				return this._IDMonAn;
			}
			set
			{
				if ((this._IDMonAn != value))
				{
					this.OnIDMonAnChanging(value);
					this.SendPropertyChanging();
					this._IDMonAn = value;
					this.SendPropertyChanged("IDMonAn");
					this.OnIDMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonAn", DbType="NVarChar(100)")]
		public string TenMonAn
		{
			get
			{
				return this._TenMonAn;
			}
			set
			{
				if ((this._TenMonAn != value))
				{
					this.OnTenMonAnChanging(value);
					this.SendPropertyChanging();
					this._TenMonAn = value;
					this.SendPropertyChanged("TenMonAn");
					this.OnTenMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiThieu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GioiThieu
		{
			get
			{
				return this._GioiThieu;
			}
			set
			{
				if ((this._GioiThieu != value))
				{
					this.OnGioiThieuChanging(value);
					this.SendPropertyChanging();
					this._GioiThieu = value;
					this.SendPropertyChanged("GioiThieu");
					this.OnGioiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiVanChuyen", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> PhiVanChuyen
		{
			get
			{
				return this._PhiVanChuyen;
			}
			set
			{
				if ((this._PhiVanChuyen != value))
				{
					this.OnPhiVanChuyenChanging(value);
					this.SendPropertyChanging();
					this._PhiVanChuyen = value;
					this.SendPropertyChanged("PhiVanChuyen");
					this.OnPhiVanChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", DbType="Int")]
		public System.Nullable<int> IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					if (this._Loai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonAn_ThucDon", Storage="_ThucDons", ThisKey="IDMonAn", OtherKey="IDMonAn")]
		public EntitySet<ThucDon> ThucDons
		{
			get
			{
				return this._ThucDons;
			}
			set
			{
				this._ThucDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_MonAn", Storage="_Loai", ThisKey="IDLoai", OtherKey="IDLoai", IsForeignKey=true)]
		public Loai Loai
		{
			get
			{
				return this._Loai.Entity;
			}
			set
			{
				Loai previousValue = this._Loai.Entity;
				if (((previousValue != value) 
							|| (this._Loai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai.Entity = null;
						previousValue.MonAns.Remove(this);
					}
					this._Loai.Entity = value;
					if ((value != null))
					{
						value.MonAns.Add(this);
						this._IDLoai = value.IDLoai;
					}
					else
					{
						this._IDLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThucDons(ThucDon entity)
		{
			this.SendPropertyChanging();
			entity.MonAn = this;
		}
		
		private void detach_ThucDons(ThucDon entity)
		{
			this.SendPropertyChanging();
			entity.MonAn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUser;
		
		private string _Username;
		
		private string _Password;
		
		private string _HoTen;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _Email;
		
		private EntitySet<DatHang> _DatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._DatHangs = new EntitySet<DatHang>(new Action<DatHang>(this.attach_DatHangs), new Action<DatHang>(this.detach_DatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DatHang", Storage="_DatHangs", ThisKey="IDUser", OtherKey="IDUser")]
		public EntitySet<DatHang> DatHangs
		{
			get
			{
				return this._DatHangs;
			}
			set
			{
				this._DatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai")]
	public partial class Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoai;
		
		private string _TenLoai;
		
		private System.Nullable<int> _IDNhom;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<MonAn> _MonAns;
		
		private EntityRef<Nhom> _Nhom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiChanging(int value);
    partial void OnIDLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnIDNhomChanging(System.Nullable<int> value);
    partial void OnIDNhomChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public Loai()
		{
			this._MonAns = new EntitySet<MonAn>(new Action<MonAn>(this.attach_MonAns), new Action<MonAn>(this.detach_MonAns));
			this._Nhom = default(EntityRef<Nhom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhom", DbType="Int")]
		public System.Nullable<int> IDNhom
		{
			get
			{
				return this._IDNhom;
			}
			set
			{
				if ((this._IDNhom != value))
				{
					if (this._Nhom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhomChanging(value);
					this.SendPropertyChanging();
					this._IDNhom = value;
					this.SendPropertyChanged("IDNhom");
					this.OnIDNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_MonAn", Storage="_MonAns", ThisKey="IDLoai", OtherKey="IDLoai")]
		public EntitySet<MonAn> MonAns
		{
			get
			{
				return this._MonAns;
			}
			set
			{
				this._MonAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhom_Loai", Storage="_Nhom", ThisKey="IDNhom", OtherKey="IDNhom", IsForeignKey=true)]
		public Nhom Nhom
		{
			get
			{
				return this._Nhom.Entity;
			}
			set
			{
				Nhom previousValue = this._Nhom.Entity;
				if (((previousValue != value) 
							|| (this._Nhom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhom.Entity = null;
						previousValue.Loais.Remove(this);
					}
					this._Nhom.Entity = value;
					if ((value != null))
					{
						value.Loais.Add(this);
						this._IDNhom = value.IDNhom;
					}
					else
					{
						this._IDNhom = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nhom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MonAns(MonAn entity)
		{
			this.SendPropertyChanging();
			entity.Loai = this;
		}
		
		private void detach_MonAns(MonAn entity)
		{
			this.SendPropertyChanging();
			entity.Loai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhom")]
	public partial class Nhom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhom;
		
		private string _TenNhom;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<Loai> _Loais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhomChanging(int value);
    partial void OnIDNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public Nhom()
		{
			this._Loais = new EntitySet<Loai>(new Action<Loai>(this.attach_Loais), new Action<Loai>(this.detach_Loais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhom", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhom
		{
			get
			{
				return this._IDNhom;
			}
			set
			{
				if ((this._IDNhom != value))
				{
					this.OnIDNhomChanging(value);
					this.SendPropertyChanging();
					this._IDNhom = value;
					this.SendPropertyChanged("IDNhom");
					this.OnIDNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhom_Loai", Storage="_Loais", ThisKey="IDNhom", OtherKey="IDNhom")]
		public EntitySet<Loai> Loais
		{
			get
			{
				return this._Loais;
			}
			set
			{
				this._Loais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loais(Loai entity)
		{
			this.SendPropertyChanging();
			entity.Nhom = this;
		}
		
		private void detach_Loais(Loai entity)
		{
			this.SendPropertyChanging();
			entity.Nhom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ThongKeThucDon")]
	public partial class V_ThongKeThucDon
	{
		
		private System.Nullable<int> _Thang;
		
		private System.Nullable<int> _Nam;
		
		private int _IDThucDon;
		
		private string _TenThucDon;
		
		private System.Nullable<int> _TongSoLuong;
		
		public V_ThongKeThucDon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int")]
		public System.Nullable<int> Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this._Thang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int")]
		public System.Nullable<int> Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this._Nam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThucDon", DbType="Int NOT NULL")]
		public int IDThucDon
		{
			get
			{
				return this._IDThucDon;
			}
			set
			{
				if ((this._IDThucDon != value))
				{
					this._IDThucDon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThucDon", DbType="NVarChar(100)")]
		public string TenThucDon
		{
			get
			{
				return this._TenThucDon;
			}
			set
			{
				if ((this._TenThucDon != value))
				{
					this._TenThucDon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoLuong", DbType="Int")]
		public System.Nullable<int> TongSoLuong
		{
			get
			{
				return this._TongSoLuong;
			}
			set
			{
				if ((this._TongSoLuong != value))
				{
					this._TongSoLuong = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ThongKeUser")]
	public partial class V_ThongKeUser
	{
		
		private System.Nullable<int> _Thang;
		
		private System.Nullable<int> _Nam;
		
		private int _IDUser;
		
		private string _Username;
		
		private string _HoTen;
		
		private System.Nullable<int> _TongSoDonDatHang;
		
		private System.Nullable<decimal> _TongThanhTien;
		
		private System.Nullable<int> _TongThucDon;
		
		public V_ThongKeUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int")]
		public System.Nullable<int> Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this._Thang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int")]
		public System.Nullable<int> Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this._Nam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this._IDUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this._HoTen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoDonDatHang", DbType="Int")]
		public System.Nullable<int> TongSoDonDatHang
		{
			get
			{
				return this._TongSoDonDatHang;
			}
			set
			{
				if ((this._TongSoDonDatHang != value))
				{
					this._TongSoDonDatHang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongThanhTien", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TongThanhTien
		{
			get
			{
				return this._TongThanhTien;
			}
			set
			{
				if ((this._TongThanhTien != value))
				{
					this._TongThanhTien = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongThucDon", DbType="Int")]
		public System.Nullable<int> TongThucDon
		{
			get
			{
				return this._TongThucDon;
			}
			set
			{
				if ((this._TongThucDon != value))
				{
					this._TongThucDon = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ThongKeDoanhThu")]
	public partial class V_ThongKeDoanhThu
	{
		
		private System.Nullable<int> _Thang;
		
		private System.Nullable<int> _Nam;
		
		private System.Nullable<int> _TongSoDonDatHang;
		
		private System.Nullable<decimal> _TongDoanhThu;
		
		public V_ThongKeDoanhThu()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int")]
		public System.Nullable<int> Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this._Thang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int")]
		public System.Nullable<int> Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this._Nam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoDonDatHang", DbType="Int")]
		public System.Nullable<int> TongSoDonDatHang
		{
			get
			{
				return this._TongSoDonDatHang;
			}
			set
			{
				if ((this._TongSoDonDatHang != value))
				{
					this._TongSoDonDatHang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongDoanhThu", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TongDoanhThu
		{
			get
			{
				return this._TongDoanhThu;
			}
			set
			{
				if ((this._TongDoanhThu != value))
				{
					this._TongDoanhThu = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaiDat")]
	public partial class CaiDat
	{
		
		private string _TenThamSo;
		
		private string _GiaTri;
		
		private string _HienThi;
		
		public CaiDat()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThamSo", DbType="VarChar(50)")]
		public string TenThamSo
		{
			get
			{
				return this._TenThamSo;
			}
			set
			{
				if ((this._TenThamSo != value))
				{
					this._TenThamSo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="NVarChar(100)")]
		public string GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this._GiaTri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HienThi", DbType="NVarChar(50)")]
		public string HienThi
		{
			get
			{
				return this._HienThi;
			}
			set
			{
				if ((this._HienThi != value))
				{
					this._HienThi = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
